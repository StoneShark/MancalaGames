tab	option	text	cspec	vtype	ui_default	row	col	description	notes	new_game	allow	moves	incr	starter	get_dir	sower	capt_ok	capturer	ender	quitter	gstr
Allow	min_move	Minimum Seeds for Move	game_info _	int	1	0	0	The minimum number of seeds a hole must have for it to be an allowable move start hole.			1								1	1	
Allow	mustshare	Must Share	game_info _	bool	False	1	0	"If an opponent has no moves at the start of your turn, you must make seeds available to them if you can."			1								1	1	
Allow	allow_rule	Special Move Restrictions	game_info _	AllowRule	NONE	3	0	"NONE: no special rule
OPP_OR_EMPTY:  Limit the allowable holes to those that end in an empty hole or reach the opponents side of the board.
SINGLE_TO_ZERO: Holes with single seeds may only be played if the next hole is empty.
SINGLE_ONLY_ALL: Holes with single seeds may only be played if all holes contain single seeds.
SINGLE_ALL_TO_ZERO: Holes with single seeds may only be played if all holes contain single seeds and then only if the next hole is empty.
TWO_ONLY_ALL: Holes with two seeds may only be played if all holes contain two seeds.
TWO_ONLY_ALL_RIGHT: Holes with two seeds may not be played, unless all holes contains two seeds, in which case the rightmost hole must be played.
FIRST_TURN_ONLY_RIGHT_TWO: The first turn must start from one of the two rightmost holes."			1										
Capture	capsamedir	Capture in Sow Direction	game_info _	bool	False	0	0	"Only meaninful, with multicapt. Captures are done in the same direction as the sowing, i.e. following the final hole sown. If not set, captures are done from the holes just sown."										1			
Capture	oppsidecapt	Opp Side Capt Only	game_info _	bool	False	1	0	Captures may only be made from your oppents side of the board.								1	1	1			
Capture	multicapt	Multiple Captures	game_info _	bool	False	2	0	"After the initial capture, continue capturing as long as the capture conditions are met."										1			
Capture	evens	Capture Evens	game_info _	bool	True	3	0	"Capture when a hole contains an even number of seeds, greater than 0."									1	1			
Capture	capt_max	Capture Max	game_info _	int	0	4	0	Capture when the contents of the hole are less than or equal to capt_max.									1	1			
Capture	capt_min	Capture Min	game_info _	int	0	5	0	Capture when the contents of the hole are greater than or equal to capt_min.									1	1			
Capture	capttwoout	Capture Two Out	game_info _	bool	False	6	0	"Capture when end in a hole with seeds, and the next hole is empty, then capture the seeds in the following hole."										1			
Capture	crosscapt	Cross-Capture	game_info _	bool	False	0	2	"If the last sown seed is put in an empty hole, any seeds on the opposite side of the board are captured."										1			
Capture	xcpickown	Own Seed on Xcapture	game_info _	CrossCaptOwn	LEAVE	1	2	"When crosscapt is set, defines what to do with the single seed initiating the cross capture.
- LEAVE: always leave the signle seed
- PICK_ON_CAPTURE: only pick (capture) the seed if there was a capture.
- ALWAYS_PICK: always pick (capture) the seed, even if there was not a capture"""										1			
Capture	grandslam	Grand Slam	game_info _	GrandSlam	LEGAL	2	2	"A grandslam is when your opponent has seeds at the start of your turn and you capture them all. This option selects what to do:
LEGAL: the seeds are captured
NOT_LEGAL: you may not capture all of your opponents seeds, a move which would do so is not allowed
NO_CAPT: you may sow the seeds, but the capture is not performed
OPP_GETS_REMAIN: if you capture all your opponents seeds, they capture all of your remaining seeds and the game is over. Winner is determined by game goal.
LEAVE_LEFT: the capture is performed from all but the leftmost hole from the sower perspective. This might leave your oppenents without seeds or might not capture any seeds.
LEAVE_RIGHT: the capture is performed from all but the rightmost hole from the sower perspective. This might leave your oppenents without seeds."			1							1			
Capture	moveunlock	Move Unlock for Capture	game_info _	bool	False	3	2	Captures may not be made from locked holes. Starting a sow from a hole unlocks it.						1			1				1
Capture	nosinglecapt	No Single Seed Capture	game_info _	bool	False	4	2	"If the selected start hole contains one seed, no capture may be made with it."										1			
Capture	capt_on	Capture On Values	game_info _	list[bool]	[]	6	2	Capture when the contents of the hole is in the capt_on list.									1	1			
Dynamics	stores	Stores	game_info _	bool	True	0	0	Are stores present on the UI. Stores might not be on the UI but used if seeds are taken out of play.		1									1	1	
Dynamics	mustpass	Must Pass	game_info _	bool	False	1	0	"If a player has no allowable moves on their turn they must pass, until they have allowable moves. The game is over when neither play has an allowable move."				1							1	1	
Dynamics	rounds	Rounds	game_info _	bool	False	4	0	Is the game played in rounds?		1									1	1	
Dynamics	round_starter	Round Starter	game_info _	RoundStarter	ALTERNATE	5	0	"Defines which player starts 2nd and subsequent rounds:
- ALTERNATE: the round starter alternates
- LOSER: the loser of the previous round starts the current round
- WINNER: the winner of the previous round starts the current round"		1											
Dynamics	rnd_left_fill	Round Left Fill	game_info _	bool	False	6	0	"When starting a new round, fill the holes from the player's left. Otherwise fill from the outsides."		1											
Dynamics	rnd_umove	Round User Relocate	game_info _	bool	False	7	0	Allow the user to move the holes filled at the start of a round.													
Dynamics	goal	Game Goal	game_info _	Goal	MAX_SEEDS	0	2	"The overall goal of the game. Defines how a player wins.
MAX_SEEDS: player with the maximum number of seeds at the end of the game wins or they collect more than half of the total seeds
DEPRIVE: eliminate all of your opponents seeds.
TERRITORY: claim ownership of holes. Each round the ownership of holes is determined by the number of seeds captured in the previous round."		1						1			1	1	1
Dynamics	no_sides	No Sides	game_info _	bool	False	1	2	"Holes are not owned. All holes are candidates for allowables and moves. Moves need specify side, position and directions.  "			1	1		1	1				1	1	
Dynamics	start_pattern	Start Pattern	game_info _	StartPattern	ALL_EQUAL	2	2	"Allows specifing non-all-equal start patterns. Four patterns are supported:
GAMACHA: starting from the third hold (from start player's left) place nbr_seeds in every other hole, the first move is prescribed move the center hole's seeds to the other side (this is done automatically).
ALTERNATES: everyother hole is filled with nbr_seeds, no seeds end up opposite eachother. If a player has fewer seeds than their opponent, then they start.
ALTS_WITH_1: like Alternates except the starter's 2nd from right hole with nbr_seeds is replaced with one seed.
CLIPPEDTRIPLES: pattern of 0 S S (where S is nbr_seeds) is used to fill the holes; if a full cycle of 3 cannot be placed, the holes are left empty. The True and False sides are the same from the player's perspective, e.g. they will look reversed when viewed from one side of the game board.
TWOEMPTY: all but the rightmost two holes for each player are filled with is nbr_seeds."		1											
Game	class	Game Class	game_class	GameClasses	Mancala	0	0	The name of the Game Class. Currently only Mancala.	Note: GameClasses only exists in the STRING_DICTS table.												
Game	holes	Holes per Side	game_constants _	int	3	2	0	Number of holes on each side of the board. Start Pattern may use this number differently.		1	1	1	1		1	1	1	1	1	1	
Game	help_file	Help File	game_info _	str	mancala_help.html	3	0	An html help file describing the game.													
Game	about	About	game_info _	multi_str	"Sow counter-clockwise.
Capture on evens. "	4	0	Short string describing the game possibly in multiple lines. Enough to remind the player what the game options are.													
Game	name	Game Name	game_info _	str	Mancala	0	2	"The game name, may have spaces. Used for the config filename and the window title."						1							
Game	nbr_start	Start Seeds	game_constants _	int	4	2	2	"The number of seeds in each hole at the start of a game, unless the sow pattern is not ALL_EQUAL. Other sow patterns use this as the number of seeds for some holes in the associated patterns."		1									1	1	
Player	algorithm	Algorithm	player _	Algorithm	minimaxer	0	0	The algorithm used for the AI Player.	Note: Algorithm only exists in the STRING_DICTS table.												
Player	difficulty	Default Difficulty	player _	int	1	1	0	"The default difficulty. Can be changed at play time, even during game play, in the Mancala UI."													
Player	mm_depth	MiniMaxer Depth	player ai_params _	list[int]	"[1, 3, 5, 7]"	3	0	"For each difficulty [0-3], the depth that the minimaxer will search to."													
Player	mcts_bias	MCTS Bias	player ai_params _	list[int]	"[400, 400, 400, 400]"	5	0	"Bias for the Monte Carlo Tree seach algorithm for each difficulty level (0-3). 
Value is divided by 1000."													
Player	mcts_nodes	MCTS Nodes per Move	player ai_params _	list[int]	"[30, 50, 80, 110]"	6	0	Number of leaf nodes to create each time we pick a new move. One value for each difficulty level (0-3).													
Player	mcts_pouts	MCTS Playouts per Node	player ai_params _	list[int]	"[1, 1, 1, 1]"	7	0	Number of end games played out from each leaf node created. One value for each difficulty level (0-3).													
Player	stores_m	Stores mult	player scorer _	int	4	0	2	The minimax scorer will use this as a multiplier to maximize the bottom players stores versus the top player's. 													
Player	access_m	Access mult	player scorer _	int	0	1	2	Access mult													
Player	seeds_m	Seeds mult	player scorer _	int	0	2	2	Seeds mult													
Player	empties_m	Empties mult	player scorer _	int	0	3	2	Empties mult													
Player	child_cnt_m	Child Count mult	player scorer _	int	0	4	2	Child Count mult													
Player	evens_m	Evens mult	player scorer _	int	0	5	2	Evens mult													
Player	easy_rand	Easy Random Addin	player scorer _	int	0	6	2	Easy Random Addin													
Player	repeat_turn	Repeat Turn mult	player scorer _	int	0	7	2	Repeat Turn mult											1	1	
skip	nbr_holes			int				An init only parameter that is used to check the other parameters in the creation of game info.													
skip	rules			RuleDict				An init only parameter that used to check the consistency of the game info. Errors and warnings are raised as the rules are processed.								1					
skip	udirect		game_info _	bool	False			A derived parameter. Do not include in config files.				1		1	1						
Sow	sow_direct	Sow Direction	game_info _	Direct	CCW	0	0	"Direction of sow:
- CW: clockwise
- CCW: counter-clockwise
- SPLIT: left holes sow counter-clockwise and right holes sow clockwise, an odd middle hole must be set as udir_hole
Any hole can be set as udir_hole to aloow the user to override the sow_direct setting."							1	1					
Sow	sow_start	Sow Start Hole	game_info _	bool	False	1	0	"When selected, the first seed is sown into  (i.e. left in) the start hole."						1		1					
Sow	skip_start	Skip Start on Lap	game_info _	bool	False	2	0	"When sowing a second or subsequent circuit of the board, skip the start hole. This will leave the start hole empty for single lap games."					1			1					
Sow	sow_own_store	Sow Own Store	game_info _	bool	False	3	0	Sow seeds into your own store when passing it. Do not sow into your opponents store.								1					
Sow	blocks	Blocks	game_info _	bool	False	4	0	Blocks remove holes from play. Seeds are not sown into them. Turns may not start from them. 		1			1			1					1
Sow	move_one	Move One Seed	game_info _	bool	False	5	0	"Only valid when sow_start is set. Changes the sow_start behavior so that if there is only one seed in the hole, it is moved in the sow direction one hole."						1							
Sow	sow_blkd_div	"Skip Own Blocked, Capt Opp"	game_info _	bool	False	6	0	Blocked holes on own side are skipped when sowing and blocked holes on opp side are diverted out of play or captured.								1					
Sow	sow_capt_all	Capture all while Sowing	game_info _	bool	False	7	0	"Capture all holes that are sown that meet the simple capture criteria: evens, min, max and  capture on. Other criteria are enforced: side of the board, unlocked, and not child.   Grand Slam rules are not applied.
If the game goal TERRITORY the capturer is the hole owner; otherwise the capturer is done by side."								1					
Sow	udir_holes	User Chooses Direction	game_info _	list[bool]	[]	8	0	"A list of holes that the user can control the sow direction from. Control is via the mouse button: left is clockwise and right is counter-clockwise.
Note: all holes respond to both mouse buttons, but if the hole is not in udir_holes, the sow direction will be that prescribed by sow_direct with either button."				1			1						
Sow	mlaps	Multilap Sow	game_info _	bool	False	0	2	"Sow is done in multiple laps: when the first sow ends, if there is more than one seed in the final hole sown, pickup those seeds and continue sowing."								1					
Sow	visit_opp	Visit Opp for Mlaps	game_info _	bool	False	2	2	Sow is multiplap only if the first sow reaches the opponents side of the board.								1					
Sow	child_type	Type of Children	game_info _	ChildType	NOCHILD	3	2	"Games with children allow players to claim holes. These child holes are an extension of the stores and seeds in them count towards a win. Making a child stops any multiple lap sowing, moves cannot start from children, and they cannot be captured.
NORMAL: no special child rules
WALDAS: Stores are not supported. Captures are instead moved into waldas, thus a player may not capture until they have created a walda. Child locations are limited.  Each player may create up to 6 waldas: on either end of each side of the board and the next outer hole on their own side of the board. Note that there are only 8 total places that waldas maybe created.
ONE_CHILD: Use the tuzdek rules for children: only one child allowed on own side of the board, may not be in player's left most hole,  and may not be opposite eachother.
"													
Sow	child_cvt	Child Convert Count	game_info _	int	0	4	2	"Defines the number of seeds required to make a child.
"			1		1			1	1	1	1	1	1
Sow	convert_cnt	Covert Count	game_info _	int	0	6	2	"A general input integer:
Goal of Territory: defines the number of holes needed for a win.
Blocked Divert Sower: defines the number of seeds needed to close/block holes (sow_blkd_div)."								1		1	1	1	
